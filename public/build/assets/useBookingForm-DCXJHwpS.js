import{r as _,m as U,f as p,h as f}from"./app-BoMxmGmn.js";import{y as i}from"./ReactToastify-BBuHDRmW.js";function K(){const[C,m]=_.useState(!1),[F,g]=_.useState(!1),[y,k]=_.useState(null),[q,l]=_.useState([]),[L,w]=_.useState(!1),{data:o,setData:b,errors:M,setError:u,clearErrors:h,reset:D}=U({first_name:"",last_name:"",email:"",phone:"",check_in_date:null,check_out_date:null,room_type:"",room_number:"",number_of_guests:"",special_requests:"",status:"pending",accommodation_id:"",address:"Default Address"}),O=["Villa","Cottage","Cabin"];_.useEffect(()=>{if(o.room_type&&o.check_in_date&&o.check_out_date){w(!0),o.room_number&&b("room_number","");const t=o.check_in_date?p(new Date(o.check_in_date),"yyyy-MM-dd"):"",e=o.check_out_date?p(new Date(o.check_out_date),"yyyy-MM-dd"):"";console.log(`Checking availability for ${o.room_type} between ${t} and ${e}`),f.get("/api/rooms/available",{params:{room_type:o.room_type.toLowerCase(),check_in:t,check_out:e}}).then(r=>{if(console.log("Room availability API response:",r.data),r.data&&Array.isArray(r.data)){const a=r.data.map(s=>s.room_number.toString());console.log(`Found ${a.length} available room(s):`,a),l(a);try{let s=[];const n=localStorage.getItem("accommodationCache");n&&(s=JSON.parse(n),s=s.filter(d=>d.type.toLowerCase()!==o.room_type.toLowerCase())),s.push(...r.data),localStorage.setItem("accommodationCache",JSON.stringify(s))}catch(s){console.error("Error updating accommodation cache:",s)}}else console.error("Unexpected API response format:",r.data),l([])}).catch(r=>{console.error("Error fetching available room numbers:",r),console.log(`Falling back to separate API calls for room type ${o.room_type}`),f.get(`/api/rooms/by-type/${o.room_type.toLowerCase()}`).then(a=>{if(console.log(`Fetched all ${o.room_type} rooms:`,a.data),a.data&&Array.isArray(a.data)){const s=a.data.map(n=>n.room_number.toString());console.log(`All room numbers for ${o.room_type}:`,s),f.get("/api/reservations/current").then(n=>{if(console.log("Current reservations:",n.data),n.data&&Array.isArray(n.data)){const d=n.data.filter(c=>{const V=new Date(c.check_in),Z=new Date(c.check_out),J=new Date(t),G=new Date(e),N=V<=G&&Z>=J;return console.log(`Booking #${c.id} (${c.accommodation_id}): ${c.check_in} to ${c.check_out} - Overlaps: ${N}`),N}).map(c=>c.accommodation_id.toString());console.log("Booked room IDs:",d);const E=a.data.filter(c=>!d.includes(c.id.toString())),P=E.map(c=>c.room_number.toString());console.log("Available room numbers after filtering:",P),l(P),localStorage.setItem("accommodationCache",JSON.stringify(E))}else console.log("No booking data found, showing all rooms"),l(s)}).catch(n=>{console.error("Error fetching current bookings:",n),console.log("Error fetching bookings, showing all rooms"),l(s)})}else console.error("Invalid room data response:",a.data),l([])}).catch(a=>{console.error("Even fallback room fetch failed:",a),l([])})}).finally(()=>{w(!1)})}else l([])},[o.room_type,o.check_in_date,o.check_out_date]);const A=(t,e)=>{const r={first_name:{pattern:/^[A-Za-z\s]{2,50}$/,message:"First name should only contain letters and be 2-50 characters long"},last_name:{pattern:/^[A-Za-z\s]{2,50}$/,message:"Last name should only contain letters and be 2-50 characters long"},email:{pattern:/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/,message:"Please enter a valid email address"},phone:{pattern:/^(\+63|0)[\d]{10}$/,message:"Please enter a valid Philippine phone number (e.g., +639123456789 or 09123456789)"},number_of_guests:{pattern:/^[1-9][0-9]*$/,message:"Number of guests must be a positive number"}};if(t==="room_type"&&!e)return"Please select a room type";if(t==="room_number"&&!e)return"Please select a room number";if(t==="number_of_guests"&&!e)return"Please specify the number of guests";if(t in r){const{pattern:a,message:s}=r[t];return!e||a.test(e)?null:s}return null},R=(t,e)=>{const r=A(t,e);b(t,e),r?u(t,r):h(t)},I=(t,e)=>{if(!t||!e)return console.error("Invalid room selection: type or number missing",t,e),0;console.log("=== getAccommodationId DEBUGGING ==="),console.log("Looking for room:",{type:t,number:e}),console.log("Input types:",{roomType:typeof t,roomNumber:typeof e,roomNumberParsed:parseInt(e)});const r=parseInt(e);if(isNaN(r)||r<=0)return console.error("Invalid room number:",e),0;let a=0;return t==="Villa"?a=r:t==="Cottage"?a=5+r:t==="Cabin"&&(a=14+r),console.log("Using direct mapping:",{roomType:t,roomNumber:e,accommodationId:a}),a},S=()=>{console.log("Form state at validation:",{check_in_date:o.check_in_date,check_out_date:o.check_out_date,check_in_type:o.check_in_date?typeof o.check_in_date:"null",check_out_type:o.check_out_date?typeof o.check_out_date:"null"});const t=["first_name","last_name","email","phone","room_type","number_of_guests"];let e=!1;return t.forEach(a=>{o[a]||(u(a,`${a.replace(/_/g," ")} is required`),e=!0)}),o.check_in_date?h("check_in_date"):(u("check_in_date","Check-in date is required"),e=!0),o.check_out_date?h("check_out_date"):(u("check_out_date","Check-out date is required"),e=!0),e?(i.error("Please fill in all required fields"),!1):I(o.room_type,o.room_number)===0?(i.error("Invalid room selection"),!1):!0},$=()=>{try{let t=o.check_in_date,e=o.check_out_date;t&&!(t instanceof Date)&&(t=new Date(t)),e&&!(e instanceof Date)&&(e=new Date(e));let r="",a="";if(t instanceof Date&&!isNaN(t.getTime()))r=p(t,"yyyy-MM-dd");else return u("check_in_date","Invalid check-in date"),null;if(e instanceof Date&&!isNaN(e.getTime()))a=p(e,"yyyy-MM-dd");else return u("check_out_date","Invalid check-out date"),null;const s=I(o.room_type,o.room_number);if(console.log(`Mapped ${o.room_type} ${o.room_number} to accommodation_id: ${s}`),!s)return console.error("Failed to get valid accommodation ID"),i.error("Error with room selection. Please try again."),null;let n="";if(o.room_type){const d=o.room_type.split(" ")[0].toLowerCase();d==="cottage"?n="cottage":d==="villa"?n="family":d==="cabin"&&(n="double")}return{first_name:o.first_name,last_name:o.last_name,email:o.email,phone:o.phone,accommodation_id:s.toString(),room_type:n,check_in:r,check_out:a,check_in_date:r,check_out_date:a,number_of_guests:o.number_of_guests,special_requests:o.special_requests||"",notes:o.special_requests||"",total_amount:"0.00",address:"Default Address",status:"pending"}}catch(t){return console.error("Error processing dates:",t),i.error("Error processing dates. Please try again."),null}},B=(t,e=!0)=>{if(t.preventDefault(),C||!S())return;m(!0);const r=$();if(!r){m(!1);return}e?(console.log("Showing confirmation dialog with data:",r),k(r),g(!0),m(!1)):v(r)},x=()=>{y&&(m(!0),v(y),g(!1))},z=()=>{g(!1),k(null)},v=async t=>{m(!0);try{const e=await f.post("/reservations",t);if(console.log("API response:",e.data),e.data.success){sessionStorage.setItem("booking_success",JSON.stringify({message:e.data.message,reservationId:e.data.reservation_id})),D(),document.body.classList.add("show-booking-confirmation"),window.dispatchEvent(new CustomEvent("booking:success",{detail:{message:e.data.message,reservationId:e.data.reservation_id}}));const r=document.querySelector(".inertia-error");r&&(r.style.display="none")}else e.data.errors?(console.error("Validation errors:",e.data.errors),i.error("Please check the form for errors and try again.")):(console.error("Error submitting form:",e.data.message||"An error occurred"),i.error(e.data.message||"An error occurred. Please try again."))}catch(e){console.error("Error submitting form:",e),f.isAxiosError(e)&&e.response?e.response.status===422&&e.response.data.errors?(console.error("Validation errors:",e.response.data.errors),i.error("Please check the form for errors and try again.")):i.error(e.response.data.message||"An error occurred. Please try again."):i.error("Network error. Please check your connection and try again.")}finally{m(!1)}};return{data:o,setData:b,errors:M,setError:u,clearErrors:h,reset:D,isSubmitting:C,setIsSubmitting:m,showConfirmDialog:F,setShowConfirmDialog:g,bookingData:y,setBookingData:k,validateField:A,handleInputChange:R,getAccommodationId:I,validateForm:S,prepareFormData:$,handleSubmit:B,handleConfirmBooking:x,handleCancelBooking:z,submitRequest:v,roomTypes:O,availableRoomNumbers:q,isLoadingRooms:L}}export{K as u};
